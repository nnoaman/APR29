# /*---------------------------------------------------------------------------8
# |                                                                            |
# |     This workflows deploys the SAP Workload Zone with GitHub Actions       |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

name: Deploy SAP Workload Zone
run-name: Deploy SAP Workload Zone by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      control_plane_name:
        description: "Deployer configuration name, use the following syntax: ENV-LOCA-VNET"
        required: true
        type: environment
      workload_zone_name:
        description: "Workload zone configuration name, use the following syntax: ENV-LOCA-VNET"
        required: true
        type: environment
      # workload_environment:
      #   description: "Workload environment (DEV, QA, PRD, ...)"
      #   required: true
      #   type: string
      #   default: DEV
      inherit_settings:
        description: "Inherit Terraform state file information from control plane"
        type: boolean
        default: true
      test:
        description: "Test the deployment without actually deploying the resources"
        type: boolean
        default: false

permissions:
  contents: write
  id-token: write
  issues: write

jobs:

  populate-keyvault:
    name: Save Deployment Credentials in Azure Keyvault
    environment: ${{ inputs.workload_zone }}
    runs-on: self-hosted
    container:
      image: ghcr.io/nnoaman/sap-automation:kimmos_playground

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get app token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          #organization: ${{ github.repository_owner }}

      - name: Azure Login with Service Principal
        if: ${{ vars.USE_MSI != 'true' }}
        uses: Azure/Login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Persist credentials
        id: parameter_validation
        run: |
          cd ${SAP_AUTOMATION_REPO_PATH}
          bash deploy/scripts/pipeline_scripts/v2/00-store-secrets-in-keyvault.sh
        env:
          APPLICATION_CONFIGURATION_NAME: ${{ vars.APPLICATION_CONFIGURATION_NAME }}
          APP_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          CONTROL_PLANE_NAME: ${{ inputs.control_plane_name }}
          DEPLOYER_KEYVAULT: ${{ vars.DEPLOYER_KEYVAULT }}
          OBJECT_ID: ${{ secrets.AZURE_OBJECT_ID }}
          TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_agent_pool: 'Default'
          TF_VAR_ansible_core_version: ${{ env.ANSIBLE_CORE_VERSION }}
          TF_VAR_app_registration_app_id: ${{ secrets.APP_REGISTRATION_APP_ID }}
          TF_VAR_tf_version: ${{ env.TF_VERSION }}
          TF_VAR_APP_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          USE_MSI: ${{ env.USE_MSI }}
          ZONE: ${{ inputs.workload_zone_name }}

  deploy_sap_workload_zone:
    name: Deploy SAP Workload Zone
    environment: ${{ inputs.workload_zone_name }}
    runs-on: self-hosted
    container:
      image: ghcr.io/nnoaman/sap-automation:kimmos_playground
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get app token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          #organization: ${{ github.repository_owner }}

      - name: Azure Login
        uses: Azure/Login@v2
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

      - name: Deploy SAP Workload Zone
        run: |
          cd ${SAP_AUTOMATION_REPO_PATH}
          deploy/automation/02-deploy-sap-workload-zone/01-deploy-sap-workload-zone.sh
        env:
          APP_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          TEST_ONLY: ${{ inputs.test }}
          CONTROL_PLANE_NAME: ${{ inputs.control_plane_name }}
          DEPLOYER_KEYVAULT: ${{ vars.DEPLOYER_KEYVAULT }}
          inherit: ${{ inputs.inherit_settings }}
          workload_zone_name: ${{ inputs.workload_zone_name }}
          APP_CONFIGURATION_NAME: ${{ vars.APP_CONFIGURATION_NAME }}

